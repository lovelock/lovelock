<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Me &amp; Web</title>
    <link>http://lovelock.coding.me/tags/docker/</link>
    <description>Recent content in Docker on Me &amp; Web</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>(c) 2013-2016 Frost Wong. All rights reserved.</copyright>
    <lastBuildDate>Thu, 09 Feb 2017 10:31:45 +0800</lastBuildDate>
    <atom:link href="/tags/docker/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>为Docker配置国内加速镜像</title>
      <link>http://lovelock.coding.me/linux/set-docker-image-mirror/</link>
      <pubDate>Thu, 09 Feb 2017 10:31:45 +0800</pubDate>
      
      <guid>http://lovelock.coding.me/linux/set-docker-image-mirror/</guid>
      <description>

&lt;p&gt;今天想着复习一下Nginx的反向代理，又懒得再配置多台机器了，正好手里有已经安装了Docker的台式机，于是就想用Nginx的Docker image来做实验了。&lt;/p&gt;

&lt;p&gt;由于众所周知的原因，我们在圈内访问&lt;a href=&#34;https://hub.docker.com/&#34;&gt;docker官方镜像&lt;/a&gt;是很慢的，好在包括&lt;a href=&#34;https://www.daocloud.io/&#34;&gt;DaoCloud&lt;/a&gt;和&lt;a href=&#34;https://dev.aliyun.com/search.html&#34;&gt;阿里云&lt;/a&gt;为我们提供了而苏稳定的镜像服务。废话不多说，下面总结了一下使用国内镜像加速Docker镜像下载的方式。&lt;/p&gt;

&lt;h2 id=&#34;获取专属的加速地址&#34;&gt;获取专属的加速地址&lt;/h2&gt;

&lt;p&gt;上面提到的两个镜像服务提供者都是需要注册才能用的，注册后你会拿到一个形如&lt;code&gt;http://78a2f85b.m.daocloud.io&lt;/code&gt;的地址（阿里的我没有尝试，应该是类似的），这就是专属你的加速地址了。说是专属，但其实并没有身份认证，任何人都是可以直接用的，除非你要把自己创建的镜像提交到DaoCloud才会做身份认证。&lt;/p&gt;

&lt;h2 id=&#34;本地配置&#34;&gt;本地配置&lt;/h2&gt;

&lt;p&gt;DaoCloud是搞了一个配置脚本来为我们自动搞定这个工作的，怎奈不知道为什么这个脚本一直没有更新，对于用systemd的发行版来说已经不适用了。对于使用systemd的发行版，有以下两种方法实现加速：&lt;/p&gt;

&lt;h3 id=&#34;1-修改service文件&#34;&gt;1. 修改service文件&lt;/h3&gt;

&lt;p&gt;安装docker后，会在&lt;code&gt;/lib/systemd/system&lt;/code&gt;目录下生成一个&lt;code&gt;docker.service&lt;/code&gt;的文件，对于Ubuntu 16.04内容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
After=network.target docker.socket
Requires=docker.socket

[Service]
Type=notify
# the default is not to use systemd for cgroups because the delegate issues still
# exists and systemd currently does not support the cgroup feature set required
# for containers run by docker
ExecStart=/usr/bin/dockerd -H fd://
ExecReload=/bin/kill -s HUP $MAINPID
# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity
# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0
# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes
# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;找到其中的&lt;code&gt;ExecStart=/usr/bin/dockerd -H fd://&lt;/code&gt;行，改成&lt;code&gt;ExecStart=/usr/bin/dockerd -H fd:// --registry-mirror=http://78a2f85b.m.daocloud.io&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;因为你手动修改了service文件，当然要执行以下命令了:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl daemon-reload
sudo systemctl restart docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果还想查看一下docker的运行状态，就再执行一下&lt;code&gt;sudo systemctl status docker&lt;/code&gt;即可。&lt;/p&gt;

&lt;h3 id=&#34;2-修改daemon-json文件&#34;&gt;2. 修改daemon.json文件&lt;/h3&gt;

&lt;p&gt;默认是没有这个文件的，可以自行创建：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo vim /etc/docker/daemon.json
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;文件内容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;registry-mirrors&amp;quot;: [
            &amp;quot;http://78a2f85b.m.daocloud.io&amp;quot;
        ],
    &amp;quot;insecure-registries&amp;quot;: []
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后执行&lt;code&gt;sudo systemctl restart docker&lt;/code&gt;。&lt;/p&gt;

&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;

&lt;p&gt;执行上面两种方法中的一种，即可享受国内良心厂商带给我们的加速服务了。注意我在本文中没有区分一个说法：镜像。有的地方镜像指的是Docker 的Image，有的地方是指加速服务的mirrors，请读者自行区分。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
